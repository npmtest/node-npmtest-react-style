{"/home/travis/build/npmtest/node-npmtest-react-style/test.js":"/* istanbul instrument in package npmtest_react_style */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-style/lib.npmtest_react_style.js":"/* istanbul instrument in package npmtest_react_style */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_style = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_style = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-style/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-style && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_style */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_style\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_style.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_style.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_style.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_style.__dirname + '/lib.npmtest_react_style.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-style/node_modules/react-style/lib/index.js":"'use strict';\n\nvar assign                          = require(\"react/lib/Object.assign\");\nvar ReactElementExtended            = require('./ReactElementExtended');\nvar ReactCompositeComponentExtended = require('./ReactCompositeComponentExtended.js');\nvar ExecutionEnvironment            = require('react/lib/ExecutionEnvironment');\n\nvar applyMediaQueries               = require('./applyMediaQueries');\nvar generateUniqueCSSClassName      = require('./generateUniqueCSSClassName');\nvar stylesToCSS                     = require('./stylesToCSS');\n\nvar isArray                         = Array.isArray;\nvar keys                            = Object.keys;\n\nvar registeredMediaQueries          = [];\nvar styles                          = [];\nvar mediaQueries                    = {};\n\nvar isProduction                    = process.env.NODE_ENV === 'production';\n\nfunction createStyle(props, className, uniqueKey) {\n  styles.push({\n    style: props,\n    className: className,\n    uniqueKey: uniqueKey\n  });\n  return className;\n}\n\nfunction createStyleSheet(stylesheet, useClassName) {\n  if (!useClassName) {\n    // default\n    stylesheet = applyMediaQueries(registeredMediaQueries, stylesheet, true);\n    return stylesheet;\n  }\n  else {\n    ReactElementExtended.maxOverridesLength = StyleSheet.maxOverridesLength;\n\n    // export to separate CSS classes\n    var styleSheetStyles = keys(stylesheet);\n    var results = {};\n    for (var i = 0, l = styleSheetStyles.length; i < l; i++) {\n      var styleName = styleSheetStyles[i];\n      var isMediaQuery = !styleName.indexOf('@media ');\n      var style = stylesheet[styleName];\n      var origUniqueKey = generateUniqueCSSClassName();\n      var uniqueKey = origUniqueKey;\n      if (!isProduction) {\n        uniqueKey = styleName + '_' + uniqueKey;\n      }\n\n      if (isMediaQuery) {\n        var mqStyleNames = keys(style);\n        var newStyle = {};\n        for (var i2 = 0, l2 = mqStyleNames.length; i2 < l2; i2++) {\n          var mqStyleName = mqStyleNames[i2];\n          var mqStyle = style[mqStyleName];\n          var uniqueKey2 = results[mqStyleName];\n          if (uniqueKey2) {\n            newStyle[uniqueKey2] = mqStyle;\n          }\n        }\n\n        if (!mediaQueries[styleName]) {\n          mediaQueries[styleName] = {};\n        }\n\n        keys(newStyle).reduce(function (acc, key) {\n          if (!acc[key]) {\n            acc[key] = newStyle[key];\n          }\n          return acc;\n        }, mediaQueries[styleName]);\n\n          continue;\n      }\n      results[styleName] = createStyle(style, isMediaQuery ? styleName : uniqueKey, origUniqueKey);\n    }\n\n    return results;\n  }\n}\n\nvar StyleSheet = {\n  compile: function(maxLength) {\n    var mq = keys(mediaQueries).map(function(query){\n      return {\n        style: mediaQueries[query],\n        className: query,\n        uniqueKey: ''\n      };\n    });\n\n    return stylesToCSS(styles.concat(mq), maxLength || 10);\n  },\n  create: createStyleSheet\n};\n\nReactCompositeComponentExtended.associateToMediaQuery = function(comp) {\n  var styles = comp.props.__cachedStyles;\n  for (var i = 0, l = styles.length; i < l; i++) {\n    var style = styles[i];\n    for (var j = 0, l2 = registeredMediaQueries.length; j < l2; j++) {\n      var registeredMediaQuery = registeredMediaQueries[j];\n      var stylesheet = registeredMediaQuery.compiled;\n      var stylesheetNames = registeredMediaQuery.styleNames;\n      for (var i2 = 0, l3 = stylesheetNames.length; i2 < l3; i2++) {\n        var styleName = stylesheetNames[i2];\n        var compiledStyle = stylesheet[styleName];\n        if (style === compiledStyle) {\n          registeredMediaQuery.elements.push(comp);\n        }\n      }\n    }\n  }\n};\n\n\nmodule.exports = StyleSheet;\n","/home/travis/build/npmtest/node-npmtest-react-style/node_modules/react-style/jest/preprocessor.js":"// taken from https://github.com/facebook/react/blob/master/jest/preprocessor.js\n\"use strict\";\n\nvar ReactTools = require('react-tools');\n\nmodule.exports = {\n  process: function(src) {\n    return ReactTools.transform(src, {harmony: true});\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-react-style/node_modules/react-style/lib/applyMediaQueries.js":"'use strict';\n\nvar assign                 = require(\"react/lib/Object.assign\");\nvar recalcMediaQueryStyles = require('./recalcMediaQueryStyles');\n\nvar matchMedia = null;\nif (typeof window !== 'undefined' && !window.__ReactStyle__) {\n  matchMedia = window.matchMedia;\n}\nvar mediaQueryBreakPoints = {};\nvar hasVisibilityChangeListener = false;\n\nfunction applyMediaQueries(registeredMediaQueries, stylesheet, register) {\n  var newStyleSheet = {};\n  var styleNames = Object.keys(stylesheet);\n\n  function recalc() {\n    recalcMediaQueryStyles(registeredMediaQueries);\n  }\n\n  if (!hasVisibilityChangeListener\n      && typeof document !== 'undefined'\n      && 'visibilityState' in document) {\n    hasVisibilityChangeListener = true;\n    document.addEventListener(\"visibilitychange\", function() {\n      if (document.visibilityState === 'visible') {\n        recalc();\n      }\n    });\n  }\n\n  for (var i = 0, l = styleNames.length; i < l; i++) {\n    var styleName = styleNames[i];\n    var style = stylesheet[styleName];\n    // only position 0 = false, so !0 = true\n    if (!styleName.indexOf('@media')) {\n      var mediaQuery = styleName.substr('@media '.length);\n      var isMediaQueryActive = false;\n\n      if (matchMedia && matchMedia(mediaQuery).matches) {\n        isMediaQueryActive = true;\n        var mqStyleNames = Object.keys(style);\n        for (var j = 0, l2 = mqStyleNames.length; j < l2; j++) {\n          var mqStyleName = mqStyleNames[j];\n\n          // warn for undeclared block\n          if (\"production\" !== process.env.NODE_ENV) {\n            if (!stylesheet[mqStyleName]) {\n              console.warn('Media query \\'' + styleName + '\\' referred to undeclared style block \\'' + mqStyleName + '\\'.');\n              continue;\n            }\n          }\n          newStyleSheet[mqStyleName] = assign({}, newStyleSheet[mqStyleName], style[mqStyleName]);\n        }\n      }\n\n      // register media query for recalc\n      if (register) {\n        registeredMediaQueries.push({\n          compiled: newStyleSheet,\n          elements: [],\n          isActive: isMediaQueryActive,\n          query: mediaQuery,\n          styleNames: styleNames,\n          stylesheet: stylesheet\n        });\n\n        if (matchMedia && !mediaQueryBreakPoints[mediaQuery]) {\n          matchMedia(mediaQuery).addListener(recalc);\n          mediaQueryBreakPoints[mediaQuery] = true;\n        }\n      }\n    }\n    else {\n      newStyleSheet[styleName] = style;\n    }\n  }\n\n  return newStyleSheet;\n}\n\n\nmodule.exports = applyMediaQueries;\n","/home/travis/build/npmtest/node-npmtest-react-style/node_modules/react-style/lib/applyStyles.js":"'use strict';\n\nvar CSSProperty = require('react/lib/CSSProperty');\nvar isArray     = Array.isArray;\nvar keys        = Object.keys;\n\nvar COMPLEX_OVERRIDES = CSSProperty.shorthandPropertyExpansions;\n\nfunction applyClassName(props, className, order, maxOverridesLength) {\n  if (!props.className) {\n    props.className = '';\n  }\n  var length = !maxOverridesLength || (order + 1) <= maxOverridesLength ? order + 1 : maxOverridesLength;\n  var uniquePartSplit = className.split('_');\n  var unique = uniquePartSplit[uniquePartSplit.length - 1];\n  for (var j = 0; j < length; j++) {\n    var selector = j === 0 ? className : unique;\n    props.className += ' ' + selector + (j === 0 ? '' : j);\n  }\n\n  return order + 1;\n}\n\nfunction applyInlineStyle(props, style, order) {\n  if (!props.style) {\n    props.style = {};\n  }\n  var styleKeys = keys(style);\n  for (var i = 0, l = styleKeys.length; i < l; i++) {\n    var key = styleKeys[i];\n    props.style[key] = style[key];\n    applyOverrides(props, key);\n  }\n\n  return order;\n}\n\nfunction applyOverrides(props, key) {\n  var overrides = COMPLEX_OVERRIDES[key];\n  if (overrides) {\n    var overridesKeys = keys(overrides);\n    for (var i = 0, l = overridesKeys.length; i < l; i++) {\n      var overrideKey = overridesKeys[i];\n      props.style[overrideKey] = '';\n    }\n  }\n}\n\nfunction applyStyle(props, style, order, maxOverridesLength) {\n  if (style === null || style === undefined || style === false) {\n    return order;\n  }\n  else if (typeof style === 'string' && order < 10) {\n    return applyClassName(props, style, order, maxOverridesLength);\n  }\n  else {\n    return applyInlineStyle(props, style, order);\n  }\n}\n\nfunction applyStyles(props, styles, order, inline, maxOverridesLength) {\n  if (order === undefined) {\n    order = 0;\n    inline = false;\n  }\n\n  if (isArray(styles)) {\n    for (var i = 0, len = styles.length; i < len; i++) {\n      var style = styles[i];\n      if (\"production\" !== process.env.NODE_ENV && style) {\n        if (typeof style === 'object' && !Array.isArray(style)) {\n          inline = true;\n        }\n        else if (inline && typeof style === 'string') {\n          console.warn('You are trying to override inline styles with a ' +\n                       'class, which might cause issues due to classes ' +\n                       'having lower CSS specificity then inline styles.');\n        }\n      }\n      order = applyStyles(props, style, order, inline, maxOverridesLength);\n    }\n    return order;\n  }\n  else {\n    return applyStyle(props, styles, order, maxOverridesLength);\n  }\n}\n\nmodule.exports = applyStyles;\n","/home/travis/build/npmtest/node-npmtest-react-style/node_modules/react-style/lib/generateUniqueCSSClassName.js":"'use strict';\n\nvar currCSSKey = 0;\nvar allowedCharacters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n/**\n * Get an unique CSS key for the className in a file. It supports up\n * to 140608 classNames.\n *\n * @return {string}\n */\nfunction generateUniqueCSSClassName() {\n  var allowedCharactersLength = allowedCharacters.length;\n  var key1unit = allowedCharactersLength * allowedCharactersLength;\n  var key1pos = Math.floor(currCSSKey / key1unit);\n  var key1 = allowedCharacters[key1pos - 1];\n  var key2pos = Math.floor((currCSSKey -\n  (key1 ? key1pos * key1unit : 0)) / allowedCharactersLength);\n  var key2 = allowedCharacters[key2pos - 1];\n  var key3 = allowedCharacters[(currCSSKey -\n                               (key1 ? (key1pos * key1unit) : 0) -\n                               (key2 ? key2pos * allowedCharactersLength : 0))];\n  var key = '';\n  if (key1) {\n    key += key1;\n  }\n  if (key2) {\n    key += key2;\n  }\n  if (key3) {\n    key += key3;\n  }\n  currCSSKey++;\n\n  return key;\n}\n\nmodule.exports = generateUniqueCSSClassName;","/home/travis/build/npmtest/node-npmtest-react-style/node_modules/react-style/lib/ReactCompositeComponentExtended.js":"'use strict';\n\nvar helperObj = {};\n\nvar ReactCompositeComponent = require('react/lib/ReactCompositeComponent');\nvar ReactComponent = require('react/lib/ReactComponent');\nvar originalMountComponent;\nvar mountExtensionPoint;\n\nif (ReactCompositeComponent.Mixin) {\n  mountExtensionPoint = ReactCompositeComponent;\n  originalMountComponent = ReactCompositeComponent.Mixin.mountComponent;\n} else {\n  mountExtensionPoint = ReactComponent;\n  originalMountComponent = ReactComponent.Mixin.mountComponent;\n}\n\nmountExtensionPoint.Mixin.mountComponent = function(rootID, transaction, context) {\n  var call = originalMountComponent.call(this, rootID, transaction, context);\n  var instance = !this._instance ? this : this._instance;\n  var props = instance.props;\n  if (props && props.__cachedStyles) {\n    helperObj.associateToMediaQuery(instance);\n  }\n  return call;\n};\n\nmodule.exports = helperObj;\n","/home/travis/build/npmtest/node-npmtest-react-style/node_modules/react-style/lib/ReactElementExtended.js":"'use strict';\n\nvar ReactElement  = require('react/lib/ReactElement');\nvar assign        = require(\"react/lib/Object.assign\");\nvar applyStyles   = require('./applyStyles');\nvar isArray       = Array.isArray;\n\nvar helperObj = {};\n\nfunction buildProps(props) {\n  var builtProps = {\n    className: props.className || null,\n    style: props.style ? assign({}, props.style) : null,\n    styles: undefined\n  };\n  applyStyles(builtProps, props.styles, 0, null, helperObj.maxOverridesLength);\n  return builtProps;\n}\n\nvar originalCreateElement = ReactElement.createElement;\nReactElement.createElement = function(type, props) {\n  var args = arguments;\n  if (props &&\n      props.styles &&\n      !props.__cachedStyles &&\n      typeof type === 'string') {\n    props.__cachedStyles = isArray(props.styles) ? props.styles : [props.styles];\n    assign(props, buildProps(props));\n  }\n  return originalCreateElement.apply(this, [type, props].concat(Array.prototype.slice.call(args, 2)));\n};\n\nmodule.exports = helperObj;\n","/home/travis/build/npmtest/node-npmtest-react-style/node_modules/react-style/lib/recalcMediaQueryStyles.js":"'use strict';\n\nvar assign                          = require(\"react/lib/Object.assign\");\nvar applyStyles                     = require('./applyStyles');\nvar enqueueForceUpdate;\n\nvar ReactElement = require('react/lib/ReactElement');\nvar ReactUpdates;\n\n// fugly\ntry {\n  // React 0.13\n  enqueueForceUpdate = require('react/lib/ReactUpdateQueue').enqueueForceUpdate;\n  ReactUpdates = require('react/lib/ReactUpdates');\n\n} catch(e) {\n  // React 0.12\n  enqueueForceUpdate = require('react/lib/ReactUpdates').enqueueUpdate;\n}\nvar matchMedia = null;\nif (typeof window !== 'undefined' && !window.__ReactStyle__) {\n  matchMedia = window.matchMedia;\n}\n\nfunction recalcMediaQueryStyles(registeredMediaQueries) {\n  for (var i = 0, l = registeredMediaQueries.length; i < l; i++) {\n    var registeredMediaQuery = registeredMediaQueries[i];\n    var matchesQuery = matchMedia(registeredMediaQuery.query).matches;\n    var isActive = registeredMediaQuery.isActive;\n    if ((matchesQuery && !isActive) || (!matchesQuery && isActive)) {\n      recalcMediaQueryStyle(registeredMediaQuery, registeredMediaQueries);\n    }\n  }\n}\n\nfunction recalcMediaQueryStyle(registeredMediaQuery, registeredMediaQueries) {\n  var applyMediaQueries = require('./applyMediaQueries');\n  registeredMediaQuery.isActive = !registeredMediaQuery.isActive;\n  var compiledStyleSheet = applyMediaQueries(registeredMediaQueries, registeredMediaQuery.stylesheet, false);\n  var elements = registeredMediaQuery.elements;\n  var i, l;\n  for (i = 0, l = elements.length; i < l; i++) {\n    var element = elements[i];\n    recalcElementStyles(registeredMediaQuery, element, compiledStyleSheet);\n  }\n\n  var styleNames = registeredMediaQuery.styleNames;\n  for (i = 0, l = styleNames.length; i < l; i++) {\n    var styleName = styleNames[i];\n    registeredMediaQuery.compiled[styleName] = compiledStyleSheet[styleName];\n  }\n}\n\nfunction recalcElementStyles(registeredMediaQuery, element, newCompiledStyleSheet) {\n  var styleSheetNames = registeredMediaQuery.styleNames;\n  var oldCompiledStyleSheet = registeredMediaQuery.compiled;\n  var oldElementStyles = element.props.__cachedStyles;\n  var newElementStyles = [];\n  for (var i = 0, l = oldElementStyles.length; i < l; i++) {\n    var oldElementStyle = oldElementStyles[i];\n    _setElementStyles(\n      newElementStyles,\n      i,\n      oldElementStyle,\n      styleSheetNames,\n      oldCompiledStyleSheet,\n      newCompiledStyleSheet);\n  }\n  var newProps = {};\n  applyStyles(newProps, newElementStyles, 0);\n  if (element._setPropsInternal) {\n\n    // React 0.12\n    element._setPropsInternal({\n      style: newProps.style,\n      __cachedStyles: newElementStyles});\n  } else {\n\n    // React 0.13\n    var instance = element._reactInternalInstance;\n    instance._setPropsInternal({\n      style : newProps.style,\n      __cachedStyles: newElementStyles\n    });\n  }\n\n  setChildElementStyles(element, styleSheetNames, oldCompiledStyleSheet, newCompiledStyleSheet);\n  enqueueForceUpdate(element);\n}\n\nfunction setChildElementStyles(element, styleSheetNames, oldCompiledStyleSheet, newCompiledStyleSheet) {\n  var children = element.props.children;\n  if (children) {\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      if (child.props && child.props.styles) {\n        var newChildStyles = [];\n        var childStyles = child.props.styles;\n        for (var childStyleIndex = 0, childStylesLength = childStyles.length; childStyleIndex < childStylesLength; childStyleIndex++) {\n          var childStyle = childStyles[childStyleIndex];\n          _setElementStyles(\n            newChildStyles,\n            childStyleIndex,\n            childStyle,\n            styleSheetNames,\n            oldCompiledStyleSheet,\n            newCompiledStyleSheet\n          );\n        }\n        if (\"production\" !== process.env.NODE_ENV) {\n          if (child._store.originalProps) {\n            child._store.originalProps.styles = newChildStyles;\n          }\n          else {\n            child._store.props.styles = newChildStyles;\n          }\n        }\n        child.props.styles = newChildStyles;\n      }\n    }\n  }\n}\n\nfunction _setElementStyles(elementStyles, j, elementStyle, styleSheetNames, oldCompiledStyleSheet, newCompiledStyleSheet) {\n  elementStyles[j] = elementStyle;\n  if (!elementStyle) {\n    return;\n  }\n  for (var i = 0, l = styleSheetNames.length; i < l; i++) {\n    var styleName = styleSheetNames[i];\n    var oldCompiledStyle = oldCompiledStyleSheet[styleName];\n    var newCompiledStyle = newCompiledStyleSheet[styleName];\n    if (oldCompiledStyle === elementStyle) {\n      elementStyles[j] = newCompiledStyle;\n    }\n  }\n}\n\nmodule.exports = recalcMediaQueryStyles;\n","/home/travis/build/npmtest/node-npmtest-react-style/node_modules/react-style/lib/stylesToCSS.js":"'use strict';\n\nvar isUnitlessNumber = require('react/lib/CSSProperty').isUnitlessNumber;\nvar hyphenateStyleName = require('react/lib/hyphenateStyleName');\nvar isArray = Array.isArray;\nvar keys = Object.keys;\nvar unsupportedPseudoClasses = require('./unsupportedPseudoClasses');\n\nvar counter = 1;\n// Follows syntax at https://developer.mozilla.org/en-US/docs/Web/CSS/content,\n// including multiple space separated values.\nvar unquotedContentValueRegex = /^(normal|none|(\\b(url\\([^)]*\\)|chapter_counter|attr\\([^)]*\\)|(no-)?(open|close)-quote|inherit)((\\b\\s*)|$|\\s+))+)$/;\n\nfunction buildRule(result, key, value, selector) {\n  if (!isUnitlessNumber[key] && typeof value === 'number') {\n    value = '' + value + 'px';\n  }\n  else if (key === 'content' && !unquotedContentValueRegex.test(value)) {\n    value = \"'\" + value.replace(/'/g, \"\\\\'\") + \"'\";\n  }\n\n  result.css += '  ' + hyphenateStyleName(key) + ': ' + value + ';\\n';\n}\n\nfunction buildRules(result, rules, uniqueKey, selector, maxLength, key) {\n  if (!rules || keys(rules).length === 0) {\n    return result;\n  }\n\n  var replicatedSelector = replicateSelector(selector, uniqueKey, maxLength, key);\n  result.css += replicatedSelector + ' {\\n';\n  var styleKeys = keys(rules);\n  for (var j = 0, l = styleKeys.length; j < l; j++) {\n    var styleKey = styleKeys[j];\n    var value = rules[styleKey];\n\n    if (unsupportedPseudoClasses[styleKey.split('(')[0].trim()]) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        console.warn('You are trying to use pseudo class ' + styleKey +\n        ', which we don\\'t support as this is better implemented using ' +\n        'JavaScript.');\n      }\n\n      continue;\n    }\n\n    if (isArray(value)) {\n      for (var i = 0, len = value.length; i < len; i++) {\n        buildRule(result, styleKey, value[i], selector, maxLength);\n      }\n    }\n    else {\n      buildRule(result, styleKey, value, selector, maxLength);\n    }\n  }\n  result.css += '}\\n';\n\n  return result;\n}\n\nfunction buildMediaQuery(result, rules, selector, maxLength) {\n  result.css += selector + '{\\n';\n  var ruleKeys = keys(rules);\n  for (var i = 0, l = ruleKeys.length; i < l; i++) {\n    var ruleKey = ruleKeys[i];\n    var rule = rules[ruleKey];\n    var ruleKeySplit = ruleKey.split('_');\n    var uniqueKey = ruleKeySplit[ruleKeySplit.length - 1];\n    buildRules(result, rule, uniqueKey, '.' + ruleKey, maxLength);\n  }\n  result.css += '}\\n';\n}\n\nfunction replicateSelector(selector, uniqueKey, max, key) {\n  var maxLength = max || 10;\n  var _key = key || '';\n  var replicatedSelector = [];\n  for (var i = 0; i < maxLength; i++) {\n    var newSelector = '';\n    for (var j = 0, l2 = i + 1; j < l2; j++) {\n      var selectorX = j === 0 ? selector : '.' + uniqueKey;\n      newSelector += selectorX + (j !==0 ? j : '');\n    }\n    replicatedSelector[i] = newSelector + _key;\n  }\n  return replicatedSelector.join(',');\n}\n\nfunction buildStyle(result, style, selector, maxLength) {\n  if (!style.className) {\n    return;\n  }\n  if (!selector && result.classNames[style.className]) {\n    return;\n  }\n  if (!selector) {\n    result.classNames[style.className] = counter++;\n    selector = '.' + style.className;\n  }\n  if (!selector.indexOf('.@media ')) {\n    buildMediaQuery(result, style.style, selector.substr(1), maxLength);\n  }\n  else {\n    buildRules(result, style.style, style.uniqueKey, selector, maxLength);\n  }\n}\n\nfunction stylesToCSS(styles, maxLength) {\n  if (!isArray(styles)) {\n    styles = [styles];\n  }\n\n  var result = {css: '', classNames: {}};\n  for (var i = 0, len = styles.length; i < len; i++) {\n    var style = styles[i];\n    buildStyle(result, style, null, maxLength);\n  }\n  return result;\n}\n\nmodule.exports = stylesToCSS;\n","/home/travis/build/npmtest/node-npmtest-react-style/node_modules/react-style/lib/unsupportedPseudoClasses.js":"/**\n * A list of unsupported pseudo classes\n */\n'use strict';\n\nvar unsupportedPseudoClasses = {\n  ':active': true,\n  ':checked': true,\n  ':default': true,\n  ':dir': true,\n  ':disabled': true,\n  ':empty': true,\n  ':enabled': true,\n  ':first': true,\n  ':first-child': true,\n  ':first-of-type': true,\n  ':fullscreen': true,\n  ':focus': true,\n  ':hover': true,\n  ':indeterminate': true,\n  ':in-range': true,\n  ':invalid': true,\n  ':lang': true,\n  ':last-child': true,\n  ':last-of-type': true,\n  ':left': true,\n  ':link': true,\n  ':not': true,\n  ':nth-child': true,\n  ':nth-last-child': true,\n  ':nth-last-of-type': true,\n  ':nth-of-type': true,\n  ':only-child': true,\n  ':only-of-type': true,\n  ':optional': true,\n  ':out-of-range': true,\n  ':read-only': true,\n  ':read-write': true,\n  ':required': true,\n  ':right': true,\n  ':root': true,\n  ':scope': true,\n  ':target': true,\n  ':valid': true,\n  ':visited': true\n};\n\nmodule.exports = unsupportedPseudoClasses;\n"}